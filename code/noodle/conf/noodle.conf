/*
 * Copyright (c) 2009-2010, Dennis Wang (dennis.wangkk@gmail.com)
 * All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the University of California, Berkeley nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE REGENTS AND CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

ne {
    system {
        # PID file path
	pid = '../pid/noodle.pid'

	# is daemon?
        daemon = true

        # memory pool settings
	pool {
	    max = 1024000000   # size in bytes of maximum momery allocation by pool
	    begin = 4          # minimum memory chunk size
	    end = 1024000      # maximum memory chunk size
	    gap = 8            # the gap between chunk
            factor = 0.2       # the coefficient of enlarge memory chunk's number
	    singleChunk = true # each allocation will use a single chunk
	}

	engine {
            # workers in engine, commonly are eqaul to the number of CPUs
	    worker = 2
	}

	log {
	    # log file path
	    name = '../logs/noodle.log'

	    /*
	     ERG   = 1
	     ALERT = 2
	     ERR   = 3
	     WARN  = 4
	     NOTI  = 5
	     INFO  = 6
	     DEBUG = 7
	    */

	    level = 5
	    flush = true
	}
    }

    plugin {
        # plugins located folder path
	path = "../plugins"

	# plugins settings
	plugins =
	(
	    # <plugin name> => [ <plugin name>, <is source?>, <forked instance IDs> ]
            "plugin3"  => [ "libfcgitest.so",      false, [ 3, 10, 11, 12, 13 ] ],
            "console"  => [ "libpluginconsole.so", true,  [ 50  ] ],
	    "fastcgi"  => [ "libfastcgi.so",       true,  [ 100 ] ]
	)
    }
}

console {
    ip   = "127.0.0.1"  # IP
    port = 12345        # port number
}

fastcgi {
    ip   = "127.0.0.1"      # IP
    #domain = "whatever";   # reserved
    port = 30000            # port to listening
    concurrent = 4          # fastcgi concurrency
    backLog = 1000          # accept back log
    receiver = "plugin3"    # fastcgi client
    maxBufferLength = 10240 # the buffer to hold HTTP attributes
}
